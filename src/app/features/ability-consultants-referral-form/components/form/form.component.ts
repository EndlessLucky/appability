import { Component, Inject } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { AbilityConsultantsReferralFormModel } from '../../models/ability-consultants-referral-form.model';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { CoreFormComponent } from '../../../../shared/grid/components/core-form/core-form.component';

@Component({
    selector: 'app-ability-consultants-referral-form-form',
    templateUrl: './form.component.html',
    styleUrls: ['./../../../../shared/grid/components/core-form/core-form.component.scss']
})
export class FormComponent extends CoreFormComponent {

    dialogTitle = 'Add new Ability Consultants Referral Form';
    dialogTitleEdit = 'Edit Ability Consultants Referral Form';

    constructor(
        private fb: FormBuilder,
        dialogRef: MatDialogRef<FormComponent>,
        @Inject(MAT_DIALOG_DATA) {
            id,
            emailAddress,
            firstNameOfReferrer,
            lastNameOfReferrer,
            referrerRelationship,
            referrerPhone,
            fundsManagement,
            planManagementAgency,
            planManagementContact,
            agreedToPrivacyPolicy,
            agreedToProvidePersonalInfo,
            participantFirstName,
            participantLastName,
            participantPreferredFirstName,
            gender,
            dateOfBirth,
            diagnosis,
            behaviourHistory,
            theParticipantHasAHistoryOfTheFollowingBehaviours,
            addressOfParticipant,
            postcodeOfParticipant,
            region,
            participantCanConsentToServices,
            ndisNumber,
            ndisStartDate,
            ndisEndDate,
            personsNdisGoals,
            ndisPlan,
            lineItemToQuoteFrom,
            howMuchFundingIsInEachStatedSupport,
            supportEnvironments,
            reasonForReferral,
            hasRestrictedPractices,
            restrictivePracticesCurrentlyUsed,
            chemicalRestraintProtocol,
            restrictivePracticesAllAuthorised,
            rpaExpiryDates,
            currentRpaConsents,
            pleaseExplainWhyEachRestrictivePracticeIsNeeded,
            iAmInterestedInTheFollowingServices,
            consenterFirstName,
            consenterLastName,
            consenterPhoneNumber,
            consenterAddress,
            consenterEmailAddress,
            consenterRelationshipToParticipanttickAllThatApply,
            enterAlternativeConsenter,
            alternativeConsenterContactFirstName,
            alternativeConsenterContactPersonLastName,
            alternativeConsenterContactPersonMobile,
            alternativeConsenterContactPersonEmail,
            alternativeConsenterContactPersonAddress,
            alternativeConsenterRelationship,
            enterAccommodationContact,
            supportedAccommodationKeyContactName,
            supportedAccommodationKeyContactMobile,
            supportedAccommodationKeyContactEmail,
            enterDayProgramContact,
            dayProgramKeyContactName,
            dayProgramKeyContactMobile,
            dayProgramKeyContactEmail,
            enterEmployerContact,
            employmentKeyContactName,
            employmentKeyContactMobile,
            employmentKeyContactEmail,
            additionalInfo,
            serviceBookingConsent,
            timestamp,
            token,

        }: AbilityConsultantsReferralFormModel) {
        super();
        this.form = this.fb.group({
            id: [id, []],
            emailAddress: [emailAddress, []],
            firstNameOfReferrer: [firstNameOfReferrer, []],
            lastNameOfReferrer: [lastNameOfReferrer, []],
            referrerRelationship: [referrerRelationship, []],
            referrerPhone: [referrerPhone, []],
            fundsManagement: [fundsManagement, []],
            planManagementAgency: [planManagementAgency, []],
            planManagementContact: [planManagementContact, []],
            agreedToPrivacyPolicy: [agreedToPrivacyPolicy, []],
            agreedToProvidePersonalInfo: [agreedToProvidePersonalInfo, []],
            participantFirstName: [participantFirstName, []],
            participantLastName: [participantLastName, []],
            participantPreferredFirstName: [participantPreferredFirstName, []],
            gender: [gender, []],
            dateOfBirth: [dateOfBirth, []],
            diagnosis: [diagnosis, []],
            behaviourHistory: [behaviourHistory, []],
            theParticipantHasAHistoryOfTheFollowingBehaviours: [theParticipantHasAHistoryOfTheFollowingBehaviours, []],
            addressOfParticipant: [addressOfParticipant, []],
            postcodeOfParticipant: [postcodeOfParticipant, []],
            region: [region, []],
            participantCanConsentToServices: [participantCanConsentToServices, []],
            ndisNumber: [ndisNumber, []],
            ndisStartDate: [ndisStartDate, []],
            ndisEndDate: [ndisEndDate, []],
            personsNdisGoals: [personsNdisGoals, []],
            ndisPlan: [ndisPlan, []],
            lineItemToQuoteFrom: [lineItemToQuoteFrom, []],
            howMuchFundingIsInEachStatedSupport: [howMuchFundingIsInEachStatedSupport, []],
            supportEnvironments: [supportEnvironments, []],
            reasonForReferral: [reasonForReferral, []],
            hasRestrictedPractices: [hasRestrictedPractices, []],
            restrictivePracticesCurrentlyUsed: [restrictivePracticesCurrentlyUsed, []],
            chemicalRestraintProtocol: [chemicalRestraintProtocol, []],
            restrictivePracticesAllAuthorised: [restrictivePracticesAllAuthorised, []],
            rpaExpiryDates: [rpaExpiryDates, []],
            currentRpaConsents: [currentRpaConsents, []],
            pleaseExplainWhyEachRestrictivePracticeIsNeeded: [pleaseExplainWhyEachRestrictivePracticeIsNeeded, []],
            iAmInterestedInTheFollowingServices: [iAmInterestedInTheFollowingServices, []],
            consenterFirstName: [consenterFirstName, []],
            consenterLastName: [consenterLastName, []],
            consenterPhoneNumber: [consenterPhoneNumber, []],
            consenterAddress: [consenterAddress, []],
            consenterEmailAddress: [consenterEmailAddress, []],
            consenterRelationshipToParticipanttickAllThatApply: [consenterRelationshipToParticipanttickAllThatApply, []],
            enterAlternativeConsenter: [enterAlternativeConsenter, []],
            alternativeConsenterContactFirstName: [alternativeConsenterContactFirstName, []],
            alternativeConsenterContactPersonLastName: [alternativeConsenterContactPersonLastName, []],
            alternativeConsenterContactPersonMobile: [alternativeConsenterContactPersonMobile, []],
            alternativeConsenterContactPersonEmail: [alternativeConsenterContactPersonEmail, []],
            alternativeConsenterContactPersonAddress: [alternativeConsenterContactPersonAddress, []],
            alternativeConsenterRelationship: [alternativeConsenterRelationship, []],
            enterAccommodationContact: [enterAccommodationContact, []],
            supportedAccommodationKeyContactName: [supportedAccommodationKeyContactName, []],
            supportedAccommodationKeyContactMobile: [supportedAccommodationKeyContactMobile, []],
            supportedAccommodationKeyContactEmail: [supportedAccommodationKeyContactEmail, []],
            enterDayProgramContact: [enterDayProgramContact, []],
            dayProgramKeyContactName: [dayProgramKeyContactName, []],
            dayProgramKeyContactMobile: [dayProgramKeyContactMobile, []],
            dayProgramKeyContactEmail: [dayProgramKeyContactEmail, []],
            enterEmployerContact: [enterEmployerContact, []],
            employmentKeyContactName: [employmentKeyContactName, []],
            employmentKeyContactMobile: [employmentKeyContactMobile, []],
            employmentKeyContactEmail: [employmentKeyContactEmail, []],
            additionalInfo: [additionalInfo, []],
            serviceBookingConsent: [serviceBookingConsent, []],
            timestamp: [timestamp, []],
            token: [token, []],

        });
        // Handle title: new vs edit
        if (id) {
            this.dialogTitle = this.dialogTitleEdit;
        }
    }
}
